from aiogram.types import Message


async def auth_user():
    """ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from users.views import UserListAPIView
    ids = await UserListAPIView().get_all_bot_ids()
    return ids


async def get_one_user(user_id: int):
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ id """
    from users.models import User
    user = User.objects.get(bot_id=user_id)
    return user


async def create_user(username, phone, bot_id):
    """ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    from users.views import UserCreateAPIView
    await UserCreateAPIView().create_user(username, phone, bot_id)


async def get_all_habits():
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∏–≤—ã—á–µ–∫ """
    from habit.views import HabitListAPIView
    habits = await HabitListAPIView().get_all_habits()
    return habits


async def get_one_habit(habit_id):
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ """
    from habit.views import HabitRetrieveAPIView
    habit = await HabitRetrieveAPIView().perform_retrieve(habit_id)
    return habit


async def retrieve_habit_help(message, habit_id):
    """ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–µ–π """
    from habit.views import HabitRetrieveAPIView
    habit = await HabitRetrieveAPIView().perform_retrieve(habit_id)
    text = (f'1. –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏: {habit.title}\n'
            f'2. –ú–µ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏: {habit.place}\n'
            f'3. –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {habit.time}\n'
            f'4. –î–µ–π—Å—Ç–≤–∏–µ: {habit.action}\n'
            f'5. –ü—Ä–∏—è—Ç–Ω–∞—è –ª–∏ —ç—Ç–æ –ø—Ä–∏–≤—ã—á–∫–∞? {habit.is_pleasant_habit}\n'
            f'6. –°–≤—è–∑–∞–Ω–Ω–∞—è –ª–∏ –æ–Ω–∞? {habit.related_habit}\n'
            f'7. –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å (–≤ –¥–Ω—è—Ö): {habit.frequency}\n'
            f'8. –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: {habit.reward}\n'
            f'9. –í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–≤ –º–∏–Ω—É—Ç–∞—Ö): {habit.time_to_complete}\n'
            f'10.–ü—Ä–∏–≤—ã—á–∫–∞ –ø—É–±–ª–∏—á–Ω–∞—è? {habit.is_public}\n')
    await message.answer(f'–í–æ—Ç –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–≤—ã—á–∫–µ üåº: \n\n{text}')


async def create_habit(**kwargs):
    from habit.models import Habit
    habit = Habit(**kwargs)
    habit.save()
    return habit


async def send_all_habits(message: Message):
    habits = await get_all_habits()
    text = '–ü—Ä–∏–≤—ã—á–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üí´:\n'
    for habit in habits:
        text += f'{habit.pk}. {habit.title}\n'
    await message.answer(text)


async def send_all_users_habits(message: Message, user_tg_id):
    from habit.views import HabitListAPIView
    habits = await HabitListAPIView().get_all_user_habits(user_tg_id)
    if habits:
        text = '–í–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏ üí´:\n'
        for habit in habits:
            text += f'{habit.pk}. {habit.title}\n'
        await message.answer(text)
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –í–∞—Å –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫')


async def delete_habit_help(message, habit_id):
    from habit.views import HabitDestroyAPIView
    await HabitDestroyAPIView().perform_destroy(habit_id)
    await message.answer('–ü—Ä–∏–≤—ã—á–∫–∞ —É–¥–∞–ª–µ–Ω–∞ üåü')
