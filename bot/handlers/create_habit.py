from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from bot.states import CreateHabit
from asgiref.sync import sync_to_async


create_habit_router = Router()


@create_habit_router.message(F.text == '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É')
async def create_habit(message: Message, state: FSMContext) -> None:
    text = '–í –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—è –¥–ª—è –í–∞—à–µ–π –±—É–¥—É—â–µ–π –ø—Ä–∏–≤—ã—á–∫–∏üí°'
    await message.answer(text)

    await message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏')
    await state.set_state(CreateHabit.title)


@create_habit_router.message(CreateHabit.title)
async def habit_title(message: Message, state: FSMContext) -> None:
    await state.update_data(title=message.text)
    await message.answer('–ú–µ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏')
    await state.set_state(CreateHabit.place)


@create_habit_router.message(CreateHabit.place)
async def habit_place(message: Message, state: FSMContext) -> None:
    await state.update_data(place=message.text)
    await message.answer('–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 12:00:00')
    await state.set_state(CreateHabit.time)


@create_habit_router.message(CreateHabit.time)
async def habit_time(message: Message, state: FSMContext) -> None:
    await state.update_data(time=message.text)
    await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏')
    await state.set_state(CreateHabit.action)


@create_habit_router.message(CreateHabit.action)
async def habit_action(message: Message, state: FSMContext) -> None:
    await state.update_data(action=message.text)
    await state.set_state(CreateHabit.is_pleasant_habit)
    await message.answer('–ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–∏—è—Ç–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏: –î–∞ –∏–ª–∏ –ù–µ—Ç')


@create_habit_router.message(CreateHabit.is_pleasant_habit)
async def is_pleasant_habit(message: Message, state: FSMContext) -> None:
    await state.update_data(is_pleasant_habit=message.text)
    await state.set_state(CreateHabit.related_habit)
    await message.answer('–≠—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞?')


@create_habit_router.message(CreateHabit.related_habit)
async def related_habit(message: Message, state: FSMContext) -> None:
    # await state.update_data(related_habit=message.text)
    await state.set_state(CreateHabit.frequency)
    await message.answer('–≠—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞?')


@create_habit_router.message(CreateHabit.frequency)
async def habit_frequency(message: Message, state: FSMContext) -> None:
    await state.update_data(frequency=int(message.text))
    await state.set_state(CreateHabit.reward)
    await message.answer('–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ')


@create_habit_router.message(CreateHabit.reward)
async def habit_reward(message: Message, state: FSMContext) -> None:
    await state.update_data(reward=message.text)
    await state.set_state(CreateHabit.reward)
    await message.answer('–í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–≤ –º–∏–Ω—É—Ç–∞—Ö)')

# —ç—Ç–æ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–µ—Ç—Å—è, –¥–∞–ª—å—à–µ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç


@create_habit_router.message(CreateHabit.time_to_complete)
async def habit_time_to_complete(message: Message, state: FSMContext) -> None:
    await state.update_data(time_to_complete=int(message.text))
    await state.set_state(CreateHabit.is_public)
    await message.answer('–ü—Ä–∏–∑–Ω–∞–∫ –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤—ã—á–∫–∏: –î–∞ –∏–ª–∏ –ù–µ—Ç')


@create_habit_router.message(CreateHabit.is_public)
async def habit_time_to_complete(message: Message, state: FSMContext) -> None:
    await state.set_state(CreateHabit.completion)
    await state.update_data(is_public=message.text)


@create_habit_router.message(CreateHabit.completion)
async def finishing_create_habit(message: Message, state: FSMContext) -> None:
    await state.clear()
    data = await state.get_data()


# –°–æ–∑–¥–∞—Ç—å utils –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –ø—Ä–∏–≤—ã—á–∫–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫
# related_habit
# user
